@page "/ChangePassword"
@inject IUserClient UserClient
@inject NavigationManager navigationManager
@rendermode InteractiveWebAssembly

<PageTitle>ForgotPassword</PageTitle>

<h3 style="margin-top: 30px;">Reset Password</h3>

<div class="row" style="margin-top: 30px;">
	<div class="col-md-6">
		<EditForm Model="@passwordDto" OnValidSubmit="ResetPassAsync">
			<DataAnnotationsValidator />

			@if (!string.IsNullOrEmpty(message))
			{
				@if (success)
				{
					<div class="alert alert-success">@message</div>
					<div class="d-flex align-items-center" style="margin-top: 30px; margin-bottom: 30px">
						<div class="spinner-border spinner-border-sm text-secondary me-2" role="status"></div>
						<span>Redirecting...</span>
					</div>
				}
				else
				{
					<div class="alert alert-danger">@message</div>
				}
			}


			<div class="mb-3">
				<label for="email" class="form-label">Email: </label>
				<InputText id="email" class="form-control" @bind-Value="@passwordDto.Email" />
				<ValidationMessage For="@(() => passwordDto.Email)" />
			</div>

			<div class="mb-3 position-relative">
				<label for="currentPassword" class="form-label">Current password: </label>
				<InputText id="currentPassword" class="form-control"
						   type="@(showCurrentPassword ? "text" : "password")"
						   @bind-Value="@passwordDto.CurrentPassword" />
				<button type="button" class="btn btn-outline-secondary btn-sm position-absolute end-0 top-0 mt-8 me-2"
						style="z-index:2;"
						@onclick="ToggleCurrentPassword">
					<i class="bi @( showCurrentPassword ? "bi-eye-slash" : "bi-eye" )"></i>
				</button>
				<ValidationMessage For="@(() => passwordDto.CurrentPassword)" />
			</div>

			<div class="mb-3 position-relative">
				<label for="newPassword" class="form-label">New password: </label>
				<InputText id="newPassword" class="form-control"
						   type="@(showNewPassword ? "text" : "password")"
						   @bind-Value="@passwordDto.NewPassword" />
				<button type="button" class="btn btn-outline-secondary btn-sm position-absolute end-0 top-0 mt-8 me-2"
						style="z-index:2;"
						@onclick="ToggleNewPassword">
					<i class="bi @( showNewPassword ? "bi-eye-slash" : "bi-eye" )"></i>
				</button>
				<ValidationMessage For="@(() => passwordDto.NewPassword)" />
			</div>
			<button class="btn btn-primary" type="submit">Reset Password</button>
		</EditForm>
	</div>
</div>

@code {
	private ResetPasswordDTO passwordDto = new();
	private string? message;
	private bool success = true;
	private bool showCurrentPassword = false;
	private bool showNewPassword = false;

	private void ToggleCurrentPassword() => showCurrentPassword = !showCurrentPassword;
	private void ToggleNewPassword() => showNewPassword = !showNewPassword;

	private async Task ResetPassAsync()
	{
		try
		{
			await UserClient.ResetPasswordAsync(passwordDto);
			message = "Password changed successfully";
			success = true;

			StateHasChanged();
			await Task.Delay(1500);
			navigationManager.NavigateTo("/profile");
		}
		catch (Exception ex)
		{
			message = ex.Message;
			success = false;

			StateHasChanged();
		}
	}

}

@page "/Admin"
@using Microsoft.AspNetCore.Authorization
@inject IUserClient UserClient
@inject IStringLocalizer<SharedResources> L
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveWebAssembly

<h3>@L["Admin Page"]</h3>

@if (users == null)
{
	<p><em>@L["Loading"]</em></p>
}
else
{
	<table class="table">
		<thead>
		<tr>
			<th>@L["Username"]</th>
			<th>Email</th>
			<th>@L["Role"]</th>
			<th>@L["Actions"]</th>
		</tr>
		</thead>
		<tbody>
		@foreach (var user in users)
		{
			<tr>
				<td>@user.Username</td>
				<td>@user.Email</td>
				<td>
					<InputSelect class="form-select" @bind-Value="user.Role">
						@foreach (var role in Enum.GetValues<Roles>())
						{
							<option value="@role">@role</option>
						}
					</InputSelect>
				</td>
				<td>
					<button class="btn btn-primary me-2" @onclick="@(() => UpdateUserAsync(user))">@L["Update"]</button>
					<button class="btn btn-danger" @onclick="@(() => DeleteUserAsync(user.UserId))">@L["Delete"]</button>
				</td>
			</tr>
		}
		</tbody>
	</table>
}

@code {
	private List<User>? users;

	protected override async Task OnInitializedAsync()
	{
		users = await UserClient.GetUsersAsync();
	}

	private async Task DeleteUserAsync(int userId)
	{
		await UserClient.DeleteUserAsync(userId);
		users = await UserClient.GetUsersAsync();
	}

	private async Task UpdateUserAsync(User user)
	{
		await UserClient.UpdateUserAsync(user);
		users = await UserClient.GetUsersAsync();
	}

}

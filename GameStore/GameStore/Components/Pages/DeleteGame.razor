@inject NavigationManager NavigationManager
@inject IGamesClient gamesClient

<div class="modal fade" id="@GetModalId(Game)" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="exampleModalLabel">@title</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="ConfirmAsync">Delete</button>
			</div>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public GameDetails? Game { get; set; }
	private string title = string.Empty;

	protected override void OnParametersSet()
	{
		title = $"Delete {Game?.Name}?";
	}

	public static string GetModalId(GameDetails? game)
	{
		ArgumentNullException.ThrowIfNull(game);
		return $"deleteModal-{game.Id}";
	}

	private async Task ConfirmAsync()
	{
		await gamesClient.DeleteGameAsync(Game.Id);
		NavigationManager.Refresh(true);
	}
}
